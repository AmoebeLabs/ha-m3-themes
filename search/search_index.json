{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the documentation for the Material 3 Themes for Home Assistant \u00b6 The Material 3 Themes... This card is not yet released. Documentation is for testing purposes!","title":"Home"},{"location":"#welcome-to-the-documentation-for-the-material-3-themes-for-home-assistant","text":"The Material 3 Themes... This card is not yet released. Documentation is for testing purposes!","title":" Welcome to the documentation for the Material 3 Themes for Home Assistant"},{"location":"basics/ha-m3-color-system/","text":"The Material 3 color system contains a few important new features. All these features are described on the m3 website. The most important aspects are described below. Material 3 color design aspects... \u00b6 Dynamic color . The color system in M3 enables user preferences and needs to interact with an app\u2019s colors. Dynamic color specifically describes the convergence of user settings with the system UI and in-app color experiences Design tokens & tool Design tokens enable flexibility and consistency across a product by allowing designers to assign an element's color role in a UI, rather than a set value. Tokens act as a bridge between an element's assigned role and the chosen color value for a role. With the addition of tokens, designing for relationships of elements is more fundamental than selecting specific colors Accessibility Dynamic color is designed to meet accessibility standards for color contrast. The system of tonal palettes is central to making any color scheme accessible by default. Combining color based on tonality, rather than hex value or hue, is one of the key systems that make any color output accessible. Products using dynamic color will meet requirements because the algorithmic combinations that an end-user can experience are designed to meet accessibility standards. ...and its use in HA \u00b6 Dynamic color . One of the nicest things is that dynamic color allows the user to use a photo or background as the basis for a Theme: M3 generates a compatible theme out of this. So just (as we see later) upload a photo, and a theme is created! Design tokens & tool The Design tokens are used to generate the CSS color variables for the HA theme. As long as you use these CSS color variables in your cards, colors follow the Theme colors and behave as expected when switching between dark and light mode. The M3 colors are mapped to the existing M2 color names that Home Assistant is using in order to have the M3 theme displayed by HA Accessibility The fact that dynamic color is designed to meet accessibility standards for color contrast is a very nice feature. This means that even when you switch to another theme, or switch between dark and light mode, everything is still readable. No more fiddling with this in the views/cards! Because of this, so far any M3 theme will work with HA! This saves a lot of time designing a theme.","title":"HA M3 Color System"},{"location":"basics/ha-m3-color-system/#material-3-color-design-aspects","text":"Dynamic color . The color system in M3 enables user preferences and needs to interact with an app\u2019s colors. Dynamic color specifically describes the convergence of user settings with the system UI and in-app color experiences Design tokens & tool Design tokens enable flexibility and consistency across a product by allowing designers to assign an element's color role in a UI, rather than a set value. Tokens act as a bridge between an element's assigned role and the chosen color value for a role. With the addition of tokens, designing for relationships of elements is more fundamental than selecting specific colors Accessibility Dynamic color is designed to meet accessibility standards for color contrast. The system of tonal palettes is central to making any color scheme accessible by default. Combining color based on tonality, rather than hex value or hue, is one of the key systems that make any color output accessible. Products using dynamic color will meet requirements because the algorithmic combinations that an end-user can experience are designed to meet accessibility standards.","title":" Material 3 color design aspects..."},{"location":"basics/ha-m3-color-system/#and-its-use-in-ha","text":"Dynamic color . One of the nicest things is that dynamic color allows the user to use a photo or background as the basis for a Theme: M3 generates a compatible theme out of this. So just (as we see later) upload a photo, and a theme is created! Design tokens & tool The Design tokens are used to generate the CSS color variables for the HA theme. As long as you use these CSS color variables in your cards, colors follow the Theme colors and behave as expected when switching between dark and light mode. The M3 colors are mapped to the existing M2 color names that Home Assistant is using in order to have the M3 theme displayed by HA Accessibility The fact that dynamic color is designed to meet accessibility standards for color contrast is a very nice feature. This means that even when you switch to another theme, or switch between dark and light mode, everything is still readable. No more fiddling with this in the views/cards! Because of this, so far any M3 theme will work with HA! This saves a lot of time designing a theme.","title":" ...and its use in HA"},{"location":"basics/ha-m3-dynamic-color/","text":"The HA implementation \u00b6 The M3 series themes for Home Assistant have some differences compared to the original Material 3, which makes it more usable in views/cards: What Material 3 HA M3 implementation Palettes 13 colors per palette 24 colors per palette showing more usable gradient colors Surfaces 2 surfaces, neutral and primary based for light and dark themes with 5 elevation levels 5 surfaces, neutral, primary, secondary, tertiary and error with 10 elevation levels giving more flexibility and choice Reference Reference colors are uniquely defined for both dark and light mode palettes Same, but extended for surfaces System Light and Dark theme system colors mapping reference colors to the theme mode Same, but extended for surfaces and palette colors. The palette colors are reversed for the Dark mode: this prevents any change in the view/card The resulting theme colors \u00b6 The resulting theme colors are shown below. The theme is shown using a Swiss Army Knife cards. The example uses the M3-07-DarkOliveGreen theme. This theme is generated from the AmoebeLabs logo Primary, secondary, tertiary and error pallettes ranging from white (100) to black (0) The 5 surfaces with 10 elevation levels each The resulting light theme color selection The resulting dark theme color selection Examples \u00b6 The dark and light examples show the Swiss Army Knife example #12 using the above theme colors. You see the following aspects of the theme: - The 'Primary' Dark Olive Green color in several shade/tints - The 'Tertiary Container' and 'On Tertiary Container' colors and on the first row with the battery and linkquality - Some 'Neutral' surface colors on the third (Hall), fourth (Bedroom) and sixth (Poseidon) rows - The background of the segmented arcs (the circles) are also using a 'Neutral' surface color. All the above colors adapt to the theme mode. The only exception is visible in the last row: in that case reference colors are used, which are the same in dark and light mode. A light theme example card A dark theme example card","title":"HA M3 Dynamic Color"},{"location":"basics/ha-m3-dynamic-color/#the-ha-implementation","text":"The M3 series themes for Home Assistant have some differences compared to the original Material 3, which makes it more usable in views/cards: What Material 3 HA M3 implementation Palettes 13 colors per palette 24 colors per palette showing more usable gradient colors Surfaces 2 surfaces, neutral and primary based for light and dark themes with 5 elevation levels 5 surfaces, neutral, primary, secondary, tertiary and error with 10 elevation levels giving more flexibility and choice Reference Reference colors are uniquely defined for both dark and light mode palettes Same, but extended for surfaces System Light and Dark theme system colors mapping reference colors to the theme mode Same, but extended for surfaces and palette colors. The palette colors are reversed for the Dark mode: this prevents any change in the view/card","title":" The HA implementation"},{"location":"basics/ha-m3-dynamic-color/#the-resulting-theme-colors","text":"The resulting theme colors are shown below. The theme is shown using a Swiss Army Knife cards. The example uses the M3-07-DarkOliveGreen theme. This theme is generated from the AmoebeLabs logo Primary, secondary, tertiary and error pallettes ranging from white (100) to black (0) The 5 surfaces with 10 elevation levels each The resulting light theme color selection The resulting dark theme color selection","title":" The resulting theme colors"},{"location":"basics/ha-m3-dynamic-color/#examples","text":"The dark and light examples show the Swiss Army Knife example #12 using the above theme colors. You see the following aspects of the theme: - The 'Primary' Dark Olive Green color in several shade/tints - The 'Tertiary Container' and 'On Tertiary Container' colors and on the first row with the battery and linkquality - Some 'Neutral' surface colors on the third (Hall), fourth (Bedroom) and sixth (Poseidon) rows - The background of the segmented arcs (the circles) are also using a 'Neutral' surface color. All the above colors adapt to the theme mode. The only exception is visible in the last row: in that case reference colors are used, which are the same in dark and light mode. A light theme example card A dark theme example card","title":" Examples"},{"location":"basics/ha-m3-overview/","text":"Material 3 for Home Assistant integrates M3 color definitions with the Home Assistant themes in a way that Home Assistant still uses the Material 2 definitions, including the dark and light theme modes, but where cards can use all the possibilities M3 offers: Seemless compatibility between M3 themes Keeping readability between dark and light modes The ability to create a theme from your favorite picture M3 Themes for Home Assistant extends and adapts the color definitions with more palettes, more surfaces, more color steps and reference color mapping to the dark and light themes without any changes in the cards.","title":"Overview"},{"location":"basics/m3-and-ha/","text":"Material 3 for Home Assistant integrates M3 color definitions with the Home Assistant themes in a way that Home Assistant still uses the Material 2 definitions, including the dark and light theme modes, but where cards can use all the possibilities M3 offers: Seemless compatibility between M3 themes Keeping readability between dark and light modes The ability to create a theme from your favorite picture M3 Themes for Home Assistant extends and adapts the color definitions with more palettes, more surfaces, more color steps and reference color mapping to the dark and light themes without any changes in the cards.","title":"M3 and ha"},{"location":"basics/m3-color-system/","text":"The Material 3 color system contains a few important new features. All these features are described on the m3 website. The most important aspects are described below. Material 3 color design aspects... \u00b6 Dynamic color . The color system in M3 enables user preferences and needs to interact with an app\u2019s colors. Dynamic color specifically describes the convergence of user settings with the system UI and in-app color experiences Design tokens & tool Design tokens enable flexibility and consistency across a product by allowing designers to assign an element's color role in a UI, rather than a set value. Tokens act as a bridge between an element's assigned role and the chosen color value for a role. With the addition of tokens, designing for relationships of elements is more fundamental than selecting specific colors Accessibility Dynamic color is designed to meet accessibility standards for color contrast. The system of tonal palettes is central to making any color scheme accessible by default. Combining color based on tonality, rather than hex value or hue, is one of the key systems that make any color output accessible. Products using dynamic color will meet requirements because the algorithmic combinations that an end-user can experience are designed to meet accessibility standards.","title":"M3 Color System"},{"location":"basics/m3-color-system/#material-3-color-design-aspects","text":"Dynamic color . The color system in M3 enables user preferences and needs to interact with an app\u2019s colors. Dynamic color specifically describes the convergence of user settings with the system UI and in-app color experiences Design tokens & tool Design tokens enable flexibility and consistency across a product by allowing designers to assign an element's color role in a UI, rather than a set value. Tokens act as a bridge between an element's assigned role and the chosen color value for a role. With the addition of tokens, designing for relationships of elements is more fundamental than selecting specific colors Accessibility Dynamic color is designed to meet accessibility standards for color contrast. The system of tonal palettes is central to making any color scheme accessible by default. Combining color based on tonality, rather than hex value or hue, is one of the key systems that make any color output accessible. Products using dynamic color will meet requirements because the algorithmic combinations that an end-user can experience are designed to meet accessibility standards.","title":" Material 3 color design aspects..."},{"location":"basics/m3-dynamic-color/","text":"Material 3 dynamic colors... \u00b6 User-generated color schemes integrate with Android apps that use the M3 color system. The example below demonstrates how user-generated colors can be created and then manifest in a UI. Color from user wallpaper \u00b6 A user\u2019s wallpaper selection is the basis for the color extraction algorithm to build a color scheme that\u2019s applied across a user's device and any apps that accept dynamic color. A single source color is used to derive 5 tonal palettes that provide the basis for any light and dark theme use cases. Error colors are also slotted automatically, but are not technically included in the algorithmic extraction. From color extraction to color schemes \u00b6 Given the tones that are derived from the wallpaper example above, tones are slotted into specific color roles that are mapped to Material components. A user-generated scheme produces the range of tones needed for both light and dark theme applications. Example of a light theme color selection generated by a red floral wallpaper. Example of a dark theme color selection generated by a red floral wallpaper.","title":"M3 Dynamic Color"},{"location":"basics/m3-dynamic-color/#material-3-dynamic-colors","text":"User-generated color schemes integrate with Android apps that use the M3 color system. The example below demonstrates how user-generated colors can be created and then manifest in a UI.","title":" Material 3 dynamic colors..."},{"location":"basics/m3-dynamic-color/#color-from-user-wallpaper","text":"A user\u2019s wallpaper selection is the basis for the color extraction algorithm to build a color scheme that\u2019s applied across a user's device and any apps that accept dynamic color. A single source color is used to derive 5 tonal palettes that provide the basis for any light and dark theme use cases. Error colors are also slotted automatically, but are not technically included in the algorithmic extraction.","title":" Color from user wallpaper"},{"location":"basics/m3-dynamic-color/#from-color-extraction-to-color-schemes","text":"Given the tones that are derived from the wallpaper example above, tones are slotted into specific color roles that are mapped to Material components. A user-generated scheme produces the range of tones needed for both light and dark theme applications. Example of a light theme color selection generated by a red floral wallpaper. Example of a dark theme color selection generated by a red floral wallpaper.","title":" From color extraction to color schemes"},{"location":"basics/theme-structure/","text":"The Swiss Army Knife YAML structure \u00b6 The main aspects of a SAK Card are shown below using yellow lines. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 # Define the type of the card to use. # # This is normally part of a \"cards\" section from a horizontal or vertical Lovelace stack # ----- - type : 'custom:dev-swiss-army-knife-card' # Define the entities entities : - <list of entities> # # Define aspect ratio and size of card. # - In this case the card is square and has a size of 100x100 # - A 2/1 ratio would have a size of 200x100 # - etc. # # Odd values like 1/0.05 are also possible. Size is 100x5 # This is used for instance to just draw a line/separator # # Specification: # - aspectratio (string) # ----- aspectratio : 1/1 # # Display the card or not. # - default false. Card is displayed. # - use true to just draw header text or a separator. # ----- disable_card : false # # ***** card/layout section ***** # # Specification: # - layout (map) # ----- layout : # ***** card/layout/styles section ***** # # Overall styles for the card and toolsets. Mainly used for defining filters! # # Specification: # - styles (map) # ----- styles : card : toolsets : # Define Neumorphic filter over the full toolset. filter : url(#sak-nm-default) # Define material shadow filter over the full toolset # filter: url(#ds-1) # # ***** card/layout/toolsets section ***** # # Define the list of toolsets from here # # Specification: # - toolsets (list of toolset configs) # ----- toolsets : # define list of toolsets with its tools - toolset : background # # define list of tools within toolset # # Specification: # - tools (list of tool configs) # tools : # # define the tools # - type : 'usersvg' <...etc...>","title":"Theme structure"},{"location":"basics/theme-structure/#the-swiss-army-knife-yaml-structure","text":"The main aspects of a SAK Card are shown below using yellow lines. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 # Define the type of the card to use. # # This is normally part of a \"cards\" section from a horizontal or vertical Lovelace stack # ----- - type : 'custom:dev-swiss-army-knife-card' # Define the entities entities : - <list of entities> # # Define aspect ratio and size of card. # - In this case the card is square and has a size of 100x100 # - A 2/1 ratio would have a size of 200x100 # - etc. # # Odd values like 1/0.05 are also possible. Size is 100x5 # This is used for instance to just draw a line/separator # # Specification: # - aspectratio (string) # ----- aspectratio : 1/1 # # Display the card or not. # - default false. Card is displayed. # - use true to just draw header text or a separator. # ----- disable_card : false # # ***** card/layout section ***** # # Specification: # - layout (map) # ----- layout : # ***** card/layout/styles section ***** # # Overall styles for the card and toolsets. Mainly used for defining filters! # # Specification: # - styles (map) # ----- styles : card : toolsets : # Define Neumorphic filter over the full toolset. filter : url(#sak-nm-default) # Define material shadow filter over the full toolset # filter: url(#ds-1) # # ***** card/layout/toolsets section ***** # # Define the list of toolsets from here # # Specification: # - toolsets (list of toolset configs) # ----- toolsets : # define list of toolsets with its tools - toolset : background # # define list of tools within toolset # # Specification: # - tools (list of tool configs) # tools : # # define the tools # - type : 'usersvg' <...etc...>","title":" The Swiss Army Knife YAML structure"},{"location":"basics/theme-template/","text":"The Swiss Army Knife has support for several sorts of templates to re-use YAML parts or add JavaScript snippets. Templating \u00b6 There are three types of templating available: the built-in YAML anchor & aliases SAK templates Third party card templates (decluttering card) They all have different usage. Type re-use method what type of re-use YAML built-in re-use within YAML file only using anchors and aliases YAML dictionaries and fields SAK templates re-use of YAML parts using global templates toolsets, tools, derived_entity, colorstops/list, etc. About any part of the config can be templated Decluttering card re-use of card configurations using global card templates Full card template with variables As the decluttering card is a card template, it can use SAK templates. JavaScript snippets \u00b6 JavaScript snippets can be entered in the YAML configuration to extend the functionality of the card.","title":"Theme Template"},{"location":"basics/theme-template/#templating","text":"There are three types of templating available: the built-in YAML anchor & aliases SAK templates Third party card templates (decluttering card) They all have different usage. Type re-use method what type of re-use YAML built-in re-use within YAML file only using anchors and aliases YAML dictionaries and fields SAK templates re-use of YAML parts using global templates toolsets, tools, derived_entity, colorstops/list, etc. About any part of the config can be templated Decluttering card re-use of card configurations using global card templates Full card template with variables As the decluttering card is a card template, it can use SAK templates.","title":" Templating"},{"location":"basics/theme-template/#javascript-snippets","text":"JavaScript snippets can be entered in the YAML configuration to extend the functionality of the card.","title":" JavaScript snippets"},{"location":"changelog/changelog/","text":"","title":"Changelog"},{"location":"design/convert-ha-theme/","text":"Where to start? \u00b6 So, you came here to read how to design your own card. That's good! If you're a graphic designer or some UX guy/woman, you will probably have tons of idea's, and after understanding the possibilities, you immediately fire up Adobe Indesign, Affinity Designer, Inkscape or Procreate on your PC/Mac/iPad or went online on Figma or some other online tool to sketch your design. You're one of those people: The nice thing about the Swiss Army Knife is that you can design your own card. But not everybody is a graphical designer, so how to approach designing a visualization in that case if you're one of the below people? The bad thing about the Swiss Army Knife is that you do need a design for a card. Get inspired! \u00b6 If you browse the internet you can find all sorts of visualizations. I just picked 3 as an example: The left one is a very simple and flat design without any fancy things on it if we forget the waves on the background. The middle is a based on a Neumorphic design. A Design that I used for most of my examples. You'll probably recognize the typical discs! The shadows in this example are a bit exaggerated for my taste btw. I have used more subtle shadows in the examples. The right one resembles a Homekit alike design. It is clean and simple. All three are completely different designs, and all three can be build using the Swiss Army Knife card! Of course, you can't build them EXACTLY that way, but you can come a long way mimicking these examples. You will find several designs in the examples Most of them are (currently) using a Neumorphic design, but other flat and Homekit alike designs are also there. Ok, I got inspired. Now what? \u00b6 Well, you can try different approaches. Re-use an existing card and modify this to your own needs to design your own card Re-use some existing design you found on the internet to design your own card Create something completely new and have a unique card design Most of the possible card visualizations have been created I think, so being inspired by something that you found on the internet and use that as the basis for your own cards is a well proven approach. Once you have decided what kind of style you want, you can start designing your cards. You can choose the simple approach or a more professional approach: The simple approach by \"Sketching something\" and then try to create this using trial-and-error in YAML Make a real design in an app on a 100x100 artboard, and then make the card using the design's measurements and coordinates The easy approach: hand sketching some design \u00b6 I used this a lot and created about 50 of these sketches in Procreate on my iPad. Only some of them made it in production. Many of them where not useful, too complex to make or just ugly. Below you see one of those sketches. It shows a pre-version of the server example (See: example 7 ) and a real production example of the lights (See: example 2 ). Not yet Leonardo da Vinci quality, but I'm learning. At least my handwriting is on par with a doctor I then use this sketch as the basis to create the card. This took some guessing about coordinates and sizes. I use Notepad++ as editor to produce the YAML and after every \"save\" action, I hit F5 to refresh HA's view to check if I'm satisfied with the result. If not, rinse and repeat... The server card took a lot of trial-and-error to get the 4 CPU/Load circles aligned the way I wanted to: The lights were much easier, as it involved much less parts: The professional approach: using an app \u00b6 Below you see Affinity Designer in action. For example 6 , I wanted to create something different with circles as the background, and on top of that some SAK tools (circles) with weather and airvisual data. The design is for a square card, so Icreated an artboard with size 100mmx100mm. This is the default 'coordinate' system for a square card. As a result the coordinates shown by Affinity Designer can be copied 1:1 in the cards YAML definition. No trial-and-error this time placing the tools at the right location. The units used are NOT relevant, it's all about a 100x100 canvas. Use centons if you like... As an example I selected one of the circles where the weather type will be put. In the lower right corner of the Affinity Designer screen, you can see that I selected the center coordinates and (if you look closely) that the X coordinate is 77 (mm) and the Y coordinate 59 (mm). You also notice the width/height for the circle is 22 (mm). The resulting partial YAML definition is as follows: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 - toolset : weather-type position : # The center X and Y position from Affinity Designer cx : 77 cy : 59 tools : # The height is 22. We make the circle a bit smaller: # Outer is 22. Radius = 22/2 - 4 = 7 - type : 'circle' id : 0 position : cx : 50 cy : 50 radius : 7 styles : circle : fill : white And the final result after placing all the SAK tools on top of the background: a nice visualization, a bit artistic, clean and showing a fair bit of information. The gradient also gives a nice touch to the overall look & feel.","title":"Covert to HA Theme"},{"location":"design/convert-ha-theme/#where-to-start","text":"So, you came here to read how to design your own card. That's good! If you're a graphic designer or some UX guy/woman, you will probably have tons of idea's, and after understanding the possibilities, you immediately fire up Adobe Indesign, Affinity Designer, Inkscape or Procreate on your PC/Mac/iPad or went online on Figma or some other online tool to sketch your design. You're one of those people: The nice thing about the Swiss Army Knife is that you can design your own card. But not everybody is a graphical designer, so how to approach designing a visualization in that case if you're one of the below people? The bad thing about the Swiss Army Knife is that you do need a design for a card.","title":" Where to start?"},{"location":"design/convert-ha-theme/#get-inspired","text":"If you browse the internet you can find all sorts of visualizations. I just picked 3 as an example: The left one is a very simple and flat design without any fancy things on it if we forget the waves on the background. The middle is a based on a Neumorphic design. A Design that I used for most of my examples. You'll probably recognize the typical discs! The shadows in this example are a bit exaggerated for my taste btw. I have used more subtle shadows in the examples. The right one resembles a Homekit alike design. It is clean and simple. All three are completely different designs, and all three can be build using the Swiss Army Knife card! Of course, you can't build them EXACTLY that way, but you can come a long way mimicking these examples. You will find several designs in the examples Most of them are (currently) using a Neumorphic design, but other flat and Homekit alike designs are also there.","title":" Get inspired!"},{"location":"design/convert-ha-theme/#ok-i-got-inspired-now-what","text":"Well, you can try different approaches. Re-use an existing card and modify this to your own needs to design your own card Re-use some existing design you found on the internet to design your own card Create something completely new and have a unique card design Most of the possible card visualizations have been created I think, so being inspired by something that you found on the internet and use that as the basis for your own cards is a well proven approach. Once you have decided what kind of style you want, you can start designing your cards. You can choose the simple approach or a more professional approach: The simple approach by \"Sketching something\" and then try to create this using trial-and-error in YAML Make a real design in an app on a 100x100 artboard, and then make the card using the design's measurements and coordinates","title":" Ok, I got inspired. Now what?"},{"location":"design/convert-ha-theme/#the-easy-approach-hand-sketching-some-design","text":"I used this a lot and created about 50 of these sketches in Procreate on my iPad. Only some of them made it in production. Many of them where not useful, too complex to make or just ugly. Below you see one of those sketches. It shows a pre-version of the server example (See: example 7 ) and a real production example of the lights (See: example 2 ). Not yet Leonardo da Vinci quality, but I'm learning. At least my handwriting is on par with a doctor I then use this sketch as the basis to create the card. This took some guessing about coordinates and sizes. I use Notepad++ as editor to produce the YAML and after every \"save\" action, I hit F5 to refresh HA's view to check if I'm satisfied with the result. If not, rinse and repeat... The server card took a lot of trial-and-error to get the 4 CPU/Load circles aligned the way I wanted to: The lights were much easier, as it involved much less parts:","title":" The easy approach: hand sketching some design"},{"location":"design/convert-ha-theme/#the-professional-approach-using-an-app","text":"Below you see Affinity Designer in action. For example 6 , I wanted to create something different with circles as the background, and on top of that some SAK tools (circles) with weather and airvisual data. The design is for a square card, so Icreated an artboard with size 100mmx100mm. This is the default 'coordinate' system for a square card. As a result the coordinates shown by Affinity Designer can be copied 1:1 in the cards YAML definition. No trial-and-error this time placing the tools at the right location. The units used are NOT relevant, it's all about a 100x100 canvas. Use centons if you like... As an example I selected one of the circles where the weather type will be put. In the lower right corner of the Affinity Designer screen, you can see that I selected the center coordinates and (if you look closely) that the X coordinate is 77 (mm) and the Y coordinate 59 (mm). You also notice the width/height for the circle is 22 (mm). The resulting partial YAML definition is as follows: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 - toolset : weather-type position : # The center X and Y position from Affinity Designer cx : 77 cy : 59 tools : # The height is 22. We make the circle a bit smaller: # Outer is 22. Radius = 22/2 - 4 = 7 - type : 'circle' id : 0 position : cx : 50 cy : 50 radius : 7 styles : circle : fill : white And the final result after placing all the SAK tools on top of the background: a nice visualization, a bit artistic, clean and showing a fair bit of information. The gradient also gives a nice touch to the overall look & feel.","title":" The professional approach: using an app"},{"location":"design/create-m3-theme/","text":"Where to start? \u00b6 So, you came here to read how to design your own card. That's good! If you're a graphic designer or some UX guy/woman, you will probably have tons of idea's, and after understanding the possibilities, you immediately fire up Adobe Indesign, Affinity Designer, Inkscape or Procreate on your PC/Mac/iPad or went online on Figma or some other online tool to sketch your design. You're one of those people: The nice thing about the Swiss Army Knife is that you can design your own card. But not everybody is a graphical designer, so how to approach designing a visualization in that case if you're one of the below people? The bad thing about the Swiss Army Knife is that you do need a design for a card. Get inspired! \u00b6 If you browse the internet you can find all sorts of visualizations. I just picked 3 as an example: The left one is a very simple and flat design without any fancy things on it if we forget the waves on the background. The middle is a based on a Neumorphic design. A Design that I used for most of my examples. You'll probably recognize the typical discs! The shadows in this example are a bit exaggerated for my taste btw. I have used more subtle shadows in the examples. The right one resembles a Homekit alike design. It is clean and simple. All three are completely different designs, and all three can be build using the Swiss Army Knife card! Of course, you can't build them EXACTLY that way, but you can come a long way mimicking these examples. You will find several designs in the examples Most of them are (currently) using a Neumorphic design, but other flat and Homekit alike designs are also there. Ok, I got inspired. Now what? \u00b6 Well, you can try different approaches. Re-use an existing card and modify this to your own needs to design your own card Re-use some existing design you found on the internet to design your own card Create something completely new and have a unique card design Most of the possible card visualizations have been created I think, so being inspired by something that you found on the internet and use that as the basis for your own cards is a well proven approach. Once you have decided what kind of style you want, you can start designing your cards. You can choose the simple approach or a more professional approach: The simple approach by \"Sketching something\" and then try to create this using trial-and-error in YAML Make a real design in an app on a 100x100 artboard, and then make the card using the design's measurements and coordinates The easy approach: hand sketching some design \u00b6 I used this a lot and created about 50 of these sketches in Procreate on my iPad. Only some of them made it in production. Many of them where not useful, too complex to make or just ugly. Below you see one of those sketches. It shows a pre-version of the server example (See: example 7 ) and a real production example of the lights (See: example 2 ). Not yet Leonardo da Vinci quality, but I'm learning. At least my handwriting is on par with a doctor I then use this sketch as the basis to create the card. This took some guessing about coordinates and sizes. I use Notepad++ as editor to produce the YAML and after every \"save\" action, I hit F5 to refresh HA's view to check if I'm satisfied with the result. If not, rinse and repeat... The server card took a lot of trial-and-error to get the 4 CPU/Load circles aligned the way I wanted to: The lights were much easier, as it involved much less parts: The professional approach: using an app \u00b6 Below you see Affinity Designer in action. For example 6 , I wanted to create something different with circles as the background, and on top of that some SAK tools (circles) with weather and airvisual data. The design is for a square card, so Icreated an artboard with size 100mmx100mm. This is the default 'coordinate' system for a square card. As a result the coordinates shown by Affinity Designer can be copied 1:1 in the cards YAML definition. No trial-and-error this time placing the tools at the right location. The units used are NOT relevant, it's all about a 100x100 canvas. Use centons if you like... As an example I selected one of the circles where the weather type will be put. In the lower right corner of the Affinity Designer screen, you can see that I selected the center coordinates and (if you look closely) that the X coordinate is 77 (mm) and the Y coordinate 59 (mm). You also notice the width/height for the circle is 22 (mm). The resulting partial YAML definition is as follows: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 - toolset : weather-type position : # The center X and Y position from Affinity Designer cx : 77 cy : 59 tools : # The height is 22. We make the circle a bit smaller: # Outer is 22. Radius = 22/2 - 4 = 7 - type : 'circle' id : 0 position : cx : 50 cy : 50 radius : 7 styles : circle : fill : white And the final result after placing all the SAK tools on top of the background: a nice visualization, a bit artistic, clean and showing a fair bit of information. The gradient also gives a nice touch to the overall look & feel.","title":"Create a M3 Theme"},{"location":"design/create-m3-theme/#where-to-start","text":"So, you came here to read how to design your own card. That's good! If you're a graphic designer or some UX guy/woman, you will probably have tons of idea's, and after understanding the possibilities, you immediately fire up Adobe Indesign, Affinity Designer, Inkscape or Procreate on your PC/Mac/iPad or went online on Figma or some other online tool to sketch your design. You're one of those people: The nice thing about the Swiss Army Knife is that you can design your own card. But not everybody is a graphical designer, so how to approach designing a visualization in that case if you're one of the below people? The bad thing about the Swiss Army Knife is that you do need a design for a card.","title":" Where to start?"},{"location":"design/create-m3-theme/#get-inspired","text":"If you browse the internet you can find all sorts of visualizations. I just picked 3 as an example: The left one is a very simple and flat design without any fancy things on it if we forget the waves on the background. The middle is a based on a Neumorphic design. A Design that I used for most of my examples. You'll probably recognize the typical discs! The shadows in this example are a bit exaggerated for my taste btw. I have used more subtle shadows in the examples. The right one resembles a Homekit alike design. It is clean and simple. All three are completely different designs, and all three can be build using the Swiss Army Knife card! Of course, you can't build them EXACTLY that way, but you can come a long way mimicking these examples. You will find several designs in the examples Most of them are (currently) using a Neumorphic design, but other flat and Homekit alike designs are also there.","title":" Get inspired!"},{"location":"design/create-m3-theme/#ok-i-got-inspired-now-what","text":"Well, you can try different approaches. Re-use an existing card and modify this to your own needs to design your own card Re-use some existing design you found on the internet to design your own card Create something completely new and have a unique card design Most of the possible card visualizations have been created I think, so being inspired by something that you found on the internet and use that as the basis for your own cards is a well proven approach. Once you have decided what kind of style you want, you can start designing your cards. You can choose the simple approach or a more professional approach: The simple approach by \"Sketching something\" and then try to create this using trial-and-error in YAML Make a real design in an app on a 100x100 artboard, and then make the card using the design's measurements and coordinates","title":" Ok, I got inspired. Now what?"},{"location":"design/create-m3-theme/#the-easy-approach-hand-sketching-some-design","text":"I used this a lot and created about 50 of these sketches in Procreate on my iPad. Only some of them made it in production. Many of them where not useful, too complex to make or just ugly. Below you see one of those sketches. It shows a pre-version of the server example (See: example 7 ) and a real production example of the lights (See: example 2 ). Not yet Leonardo da Vinci quality, but I'm learning. At least my handwriting is on par with a doctor I then use this sketch as the basis to create the card. This took some guessing about coordinates and sizes. I use Notepad++ as editor to produce the YAML and after every \"save\" action, I hit F5 to refresh HA's view to check if I'm satisfied with the result. If not, rinse and repeat... The server card took a lot of trial-and-error to get the 4 CPU/Load circles aligned the way I wanted to: The lights were much easier, as it involved much less parts:","title":" The easy approach: hand sketching some design"},{"location":"design/create-m3-theme/#the-professional-approach-using-an-app","text":"Below you see Affinity Designer in action. For example 6 , I wanted to create something different with circles as the background, and on top of that some SAK tools (circles) with weather and airvisual data. The design is for a square card, so Icreated an artboard with size 100mmx100mm. This is the default 'coordinate' system for a square card. As a result the coordinates shown by Affinity Designer can be copied 1:1 in the cards YAML definition. No trial-and-error this time placing the tools at the right location. The units used are NOT relevant, it's all about a 100x100 canvas. Use centons if you like... As an example I selected one of the circles where the weather type will be put. In the lower right corner of the Affinity Designer screen, you can see that I selected the center coordinates and (if you look closely) that the X coordinate is 77 (mm) and the Y coordinate 59 (mm). You also notice the width/height for the circle is 22 (mm). The resulting partial YAML definition is as follows: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 - toolset : weather-type position : # The center X and Y position from Affinity Designer cx : 77 cy : 59 tools : # The height is 22. We make the circle a bit smaller: # Outer is 22. Radius = 22/2 - 4 = 7 - type : 'circle' id : 0 position : cx : 50 cy : 50 radius : 7 styles : circle : fill : white And the final result after placing all the SAK tools on top of the background: a nice visualization, a bit artistic, clean and showing a fair bit of information. The gradient also gives a nice touch to the overall look & feel.","title":" The professional approach: using an app"},{"location":"design/introduction/","text":"Where to start? \u00b6 So, you came here to read how to design your own card. That's good! If you're a graphic designer or some UX guy/woman, you will probably have tons of idea's, and after understanding the possibilities, you immediately fire up Adobe Indesign, Affinity Designer, Inkscape or Procreate on your PC/Mac/iPad or went online on Figma or some other online tool to sketch your design. You're one of those people: The nice thing about the Swiss Army Knife is that you can design your own card. But not everybody is a graphical designer, so how to approach designing a visualization in that case if you're one of the below people? The bad thing about the Swiss Army Knife is that you do need a design for a card. Get inspired! \u00b6 If you browse the internet you can find all sorts of visualizations. I just picked 3 as an example: The left one is a very simple and flat design without any fancy things on it if we forget the waves on the background. The middle is a based on a Neumorphic design. A Design that I used for most of my examples. You'll probably recognize the typical discs! The shadows in this example are a bit exaggerated for my taste btw. I have used more subtle shadows in the examples. The right one resembles a Homekit alike design. It is clean and simple. All three are completely different designs, and all three can be build using the Swiss Army Knife card! Of course, you can't build them EXACTLY that way, but you can come a long way mimicking these examples. You will find several designs in the examples Most of them are (currently) using a Neumorphic design, but other flat and Homekit alike designs are also there. Ok, I got inspired. Now what? \u00b6 Well, you can try different approaches. Re-use an existing card and modify this to your own needs to design your own card Re-use some existing design you found on the internet to design your own card Create something completely new and have a unique card design Most of the possible card visualizations have been created I think, so being inspired by something that you found on the internet and use that as the basis for your own cards is a well proven approach. Once you have decided what kind of style you want, you can start designing your cards. You can choose the simple approach or a more professional approach: The simple approach by \"Sketching something\" and then try to create this using trial-and-error in YAML Make a real design in an app on a 100x100 artboard, and then make the card using the design's measurements and coordinates The easy approach: hand sketching some design \u00b6 I used this a lot and created about 50 of these sketches in Procreate on my iPad. Only some of them made it in production. Many of them where not useful, too complex to make or just ugly. Below you see one of those sketches. It shows a pre-version of the server example (See: example 7 ) and a real production example of the lights (See: example 2 ). Not yet Leonardo da Vinci quality, but I'm learning. At least my handwriting is on par with a doctor I then use this sketch as the basis to create the card. This took some guessing about coordinates and sizes. I use Notepad++ as editor to produce the YAML and after every \"save\" action, I hit F5 to refresh HA's view to check if I'm satisfied with the result. If not, rinse and repeat... The server card took a lot of trial-and-error to get the 4 CPU/Load circles aligned the way I wanted to: The lights were much easier, as it involved much less parts: The professional approach: using an app \u00b6 Below you see Affinity Designer in action. For example 6 , I wanted to create something different with circles as the background, and on top of that some SAK tools (circles) with weather and airvisual data. The design is for a square card, so Icreated an artboard with size 100mmx100mm. This is the default 'coordinate' system for a square card. As a result the coordinates shown by Affinity Designer can be copied 1:1 in the cards YAML definition. No trial-and-error this time placing the tools at the right location. The units used are NOT relevant, it's all about a 100x100 canvas. Use centons if you like... As an example I selected one of the circles where the weather type will be put. In the lower right corner of the Affinity Designer screen, you can see that I selected the center coordinates and (if you look closely) that the X coordinate is 77 (mm) and the Y coordinate 59 (mm). You also notice the width/height for the circle is 22 (mm). The resulting partial YAML definition is as follows: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 - toolset : weather-type position : # The center X and Y position from Affinity Designer cx : 77 cy : 59 tools : # The height is 22. We make the circle a bit smaller: # Outer is 22. Radius = 22/2 - 4 = 7 - type : 'circle' id : 0 position : cx : 50 cy : 50 radius : 7 styles : circle : fill : white And the final result after placing all the SAK tools on top of the background: a nice visualization, a bit artistic, clean and showing a fair bit of information. The gradient also gives a nice touch to the overall look & feel.","title":"Introduction"},{"location":"design/introduction/#where-to-start","text":"So, you came here to read how to design your own card. That's good! If you're a graphic designer or some UX guy/woman, you will probably have tons of idea's, and after understanding the possibilities, you immediately fire up Adobe Indesign, Affinity Designer, Inkscape or Procreate on your PC/Mac/iPad or went online on Figma or some other online tool to sketch your design. You're one of those people: The nice thing about the Swiss Army Knife is that you can design your own card. But not everybody is a graphical designer, so how to approach designing a visualization in that case if you're one of the below people? The bad thing about the Swiss Army Knife is that you do need a design for a card.","title":" Where to start?"},{"location":"design/introduction/#get-inspired","text":"If you browse the internet you can find all sorts of visualizations. I just picked 3 as an example: The left one is a very simple and flat design without any fancy things on it if we forget the waves on the background. The middle is a based on a Neumorphic design. A Design that I used for most of my examples. You'll probably recognize the typical discs! The shadows in this example are a bit exaggerated for my taste btw. I have used more subtle shadows in the examples. The right one resembles a Homekit alike design. It is clean and simple. All three are completely different designs, and all three can be build using the Swiss Army Knife card! Of course, you can't build them EXACTLY that way, but you can come a long way mimicking these examples. You will find several designs in the examples Most of them are (currently) using a Neumorphic design, but other flat and Homekit alike designs are also there.","title":" Get inspired!"},{"location":"design/introduction/#ok-i-got-inspired-now-what","text":"Well, you can try different approaches. Re-use an existing card and modify this to your own needs to design your own card Re-use some existing design you found on the internet to design your own card Create something completely new and have a unique card design Most of the possible card visualizations have been created I think, so being inspired by something that you found on the internet and use that as the basis for your own cards is a well proven approach. Once you have decided what kind of style you want, you can start designing your cards. You can choose the simple approach or a more professional approach: The simple approach by \"Sketching something\" and then try to create this using trial-and-error in YAML Make a real design in an app on a 100x100 artboard, and then make the card using the design's measurements and coordinates","title":" Ok, I got inspired. Now what?"},{"location":"design/introduction/#the-easy-approach-hand-sketching-some-design","text":"I used this a lot and created about 50 of these sketches in Procreate on my iPad. Only some of them made it in production. Many of them where not useful, too complex to make or just ugly. Below you see one of those sketches. It shows a pre-version of the server example (See: example 7 ) and a real production example of the lights (See: example 2 ). Not yet Leonardo da Vinci quality, but I'm learning. At least my handwriting is on par with a doctor I then use this sketch as the basis to create the card. This took some guessing about coordinates and sizes. I use Notepad++ as editor to produce the YAML and after every \"save\" action, I hit F5 to refresh HA's view to check if I'm satisfied with the result. If not, rinse and repeat... The server card took a lot of trial-and-error to get the 4 CPU/Load circles aligned the way I wanted to: The lights were much easier, as it involved much less parts:","title":" The easy approach: hand sketching some design"},{"location":"design/introduction/#the-professional-approach-using-an-app","text":"Below you see Affinity Designer in action. For example 6 , I wanted to create something different with circles as the background, and on top of that some SAK tools (circles) with weather and airvisual data. The design is for a square card, so Icreated an artboard with size 100mmx100mm. This is the default 'coordinate' system for a square card. As a result the coordinates shown by Affinity Designer can be copied 1:1 in the cards YAML definition. No trial-and-error this time placing the tools at the right location. The units used are NOT relevant, it's all about a 100x100 canvas. Use centons if you like... As an example I selected one of the circles where the weather type will be put. In the lower right corner of the Affinity Designer screen, you can see that I selected the center coordinates and (if you look closely) that the X coordinate is 77 (mm) and the Y coordinate 59 (mm). You also notice the width/height for the circle is 22 (mm). The resulting partial YAML definition is as follows: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 - toolset : weather-type position : # The center X and Y position from Affinity Designer cx : 77 cy : 59 tools : # The height is 22. We make the circle a bit smaller: # Outer is 22. Radius = 22/2 - 4 = 7 - type : 'circle' id : 0 position : cx : 50 cy : 50 radius : 7 styles : circle : fill : white And the final result after placing all the SAK tools on top of the background: a nice visualization, a bit artistic, clean and showing a fair bit of information. The gradient also gives a nice touch to the overall look & feel.","title":" The professional approach: using an app"},{"location":"examples/example-1/","text":"This theme uses an TODO color as the primary color. Theme Definition \u00b6 Examples \u00b6","title":"1. Theme 01 - Unknown"},{"location":"examples/example-1/#theme-definition","text":"","title":" Theme Definition"},{"location":"examples/example-1/#examples","text":"","title":" Examples"},{"location":"examples/example-2/","text":"This theme uses a Cadmium Green color as the primary color. Theme Definition \u00b6 Examples \u00b6","title":"2. Theme 02 - CadmiumGreen"},{"location":"examples/example-2/#theme-definition","text":"","title":" Theme Definition"},{"location":"examples/example-2/#examples","text":"","title":" Examples"},{"location":"examples/example-3/","text":"This theme uses a Porcupine (Brown-Yellow) color as the primary color. Theme Definition \u00b6 Examples \u00b6","title":"3. Theme 03 - Porcupine"},{"location":"examples/example-3/#theme-definition","text":"","title":" Theme Definition"},{"location":"examples/example-3/#examples","text":"","title":" Examples"},{"location":"examples/example-4/","text":"This theme uses an Magenta color as the primary color. Theme Definition \u00b6 Examples \u00b6","title":"4. Theme 04 - Magenta"},{"location":"examples/example-4/#theme-definition","text":"","title":" Theme Definition"},{"location":"examples/example-4/#examples","text":"","title":" Examples"},{"location":"examples/example-5/","text":"This theme uses a Brown color as the primary color. Theme Definition \u00b6 Examples \u00b6","title":"5. Theme 05 - Brown"},{"location":"examples/example-5/#theme-definition","text":"","title":" Theme Definition"},{"location":"examples/example-5/#examples","text":"","title":" Examples"},{"location":"examples/example-6/","text":"This theme uses an Teal Blue color as the primary color. Theme Definition \u00b6 Examples \u00b6","title":"6. Theme 06 - TealBlue"},{"location":"examples/example-6/#theme-definition","text":"","title":" Theme Definition"},{"location":"examples/example-6/#examples","text":"","title":" Examples"},{"location":"examples/example-7/","text":"This theme uses an Olive Green color as the primary color. Theme Definition \u00b6 Examples \u00b6","title":"7. Theme 07 - DarkOliveGreen"},{"location":"examples/example-7/#theme-definition","text":"","title":" Theme Definition"},{"location":"examples/example-7/#examples","text":"","title":" Examples"},{"location":"examples/introduction/","text":"I have created several theme examples to give you an idea about the looks & possibilities. Overview of the Examples \u00b6 All examples show example view #12 of the Swiss Army Knife custom card. An overview of all the examples Example 1 : Example 1 : Example 2 : Example 2 : Example 3 : Example 3 : Example 4 : Example 4 : Example 5 : Example 5 : Example 6 : Example 6 : Example 7 : Example 7 :","title":"Introduction"},{"location":"examples/introduction/#overview-of-the-examples","text":"All examples show example view #12 of the Swiss Army Knife custom card. An overview of all the examples Example 1 : Example 1 : Example 2 : Example 2 : Example 3 : Example 3 : Example 4 : Example 4 : Example 5 : Example 5 : Example 6 : Example 6 : Example 7 : Example 7 :","title":" Overview of the Examples"},{"location":"start/installation/","text":"The installation can be done in two ways: automatic install using HACS manual install On top of that you can install the examples using an extra dashboard. Automatic install using HACS \u00b6 By the time this card is released, it will become available in HACS. Manual install (for Beta 0.9.0-b2, January 2022) \u00b6 This second beta contains some changes in the layout and !includes to make it more up-to-date with current Home Assistant possibilities and requires less manual work. The first beta was still based on an very old config of mine. This version uses the possibilities described in Splitting up the configuration . This beta version expects the files to be using the following directory structure with their files. If your structure differs, put the files into YOUR location, and don't forget to adjust the !include statements. My Folder Structure \u00b6 I use separate folders for many things in Home Assistant Read and adapt to your own config and structure. Below, as reference the folder structure I use Home Assistant Lovelace folder www folder Themes folder homeassistant-data/ . \u251c\u2500 lovelace/ \u251c\u2500 themes/ \u251c\u2500 www/ \u2502 \u251c\u2500 configuration.yaml \u251c\u2500 ui-lovelace.yaml \u2514\u2500 sak-examples-dashboard.yaml My Lovelace folder contains the following folders: lovelace/ . \u251c\u2500 decluttering_templates \u2502 \u251c\u2500 decluttering_templates.yaml \u2502 \u2514\u2500 (etc) \u2502 \u251c\u2500 sak_templates/ \u2502 \u251c\u2500 sak_templates.yaml \u2502 \u251c\u2500 definitions/ \u2502 \u2502 \u251c\u2500 sak-css-definitions.yaml \u2502 \u2502 \u251c\u2500 user-css-definitions.yaml \u2502 \u2502 \u2514\u2500 sak-svg-definitions.yaml \u2502 \u2514\u2500 templates/ \u2502 \u2514\u2500<templates>.yaml \u2502 \u251c\u2500 resources \u2502 \u2514\u2500 resources.yaml \u2502 \u251c\u2500 views/ \u2502 \u251c\u2500 view-sake1.yml \u2502 \u251c\u2500 (...) \u2502 \u2514\u2500 view-sake11.yml The location of the sak_templates folder in the lovelace folder is MANDATORY! This location is hard-coded into the SAK card. SAK needs the templates to function! www/ . \u251c\u2500 community/ \u2502 \u2514\u2500 wip-swiss-army-knife-card/ \u2502 \u2514\u2500 dev-swiss-army-knife-card.js \u2502 \u251c\u2500 images/ \u251c\u2500 backgrounds/ \u2502 \u2514\u2500 balls-background-1.svg # Used by view-sake6.yaml \u2502 \u251c\u2500 weather/ # Used by all weather-type usersvg tools \u2502 \u251c\u2500 *-day.svg \u2502 \u2514\u2500 *-night.svg \u2502 \u251c\u2500 ic-face-1.svg # Used by Airvisual face display usersvg tools \u251c\u2500 (...) \u2514\u2500 ic-face-6.svg themes/ . \u251c\u2500 nm-01-gonsboro.yaml \u2514\u2500 nm-03-dark-steelblue.yaml Step 1: Add Swiss Army Knife Card to your installation \u00b6 The folder has a wip prefix and the card itself a dev prefix. These will be removed in the official release. This way they can't overwrite each other... Step 1a: Put the card into the community ( HACS ) folder. www/ . \u251c\u2500 community/ \u2502 \u2514\u2500 wip-swiss-army-knife-card/ \u2502 \u2514\u2500 dev-swiss-army-knife-card.js Step 1b: Add the card to the resources.yaml file. resources.yaml - url : /hacsfiles/wip-swiss-army-knife-card/dev-swiss-army-knife-card.min.js type : module The resources.yaml file should be included in your configuration.yaml config. I assume that that is already in place if you're using custom cards. configuration.yaml lovelace : mode : yaml resources : !include lovelace/resources/resources.yaml I have a YAML only config. Pleas adjust to your own configuration Step 2: Add Swiss Army Knife templates \u00b6 The second step is to add the sak_templates . These are mandatory. Step 2a: Add the SAK templates to the sak_templates folder. Create the sak_templates folder in the lovelace folder and add all the folders and files. lovelace/ . \u251c\u2500 sak_templates/ \u2502 \u251c\u2500 sak_templates.yaml \u2502 \u251c\u2500 definitions/ \u2502 \u2502 \u251c\u2500 sak-css-definitions.yaml \u2502 \u2502 \u2514\u2500 user-css-definitions.yaml \u2502 \u2514\u2500 templates/ \u2502 \u2514\u2500<templates>.yaml``` Step 2b: Include sak_templates to ui-lovelace.yaml ui-lovelace.yaml # Swiss Army Knife Templates sak_templates : !include lovelace/sak_templates/sak_templates.yaml The supplied sak_templates.yaml file contains a wildcard include for the templates folder. So ANY template you add in that folder will be automatically included. You don't have to change this file! You made it! \u00b6 If this is all you want, you're ready to use the Swiss Army Knife card. If not, continue with the next paragraph for the example dashboard install. Examples dashboard install \u00b6 If you want to use the examples, you need the full install that includes the example views, decluttering templates, backgrounds and weather and Airvisual images. And last but not least: the used gonsboro and dark steelblue themes in the examples. Check my folder structure to understand my setup So you can adapt it to yours if different. Step 1: Add decluttering templates \u00b6 Step 1a: Install the decluttering card first, if you haven't installed it yet Use HACS to install the decluttering card. Then you should have the following in your ui-lovelace.yaml file: ui-lovelace.yaml # Decluttering Templates decluttering_templates : !include lovelace/decluttering_templates/decluttering_templates.yaml Step 1b: Add the decluttering templates for SAK to your installation. The supplied decluttering_templates.yaml file contains the templates for SAK. If you already use the decluttering card, merge the files. Step 2: Add themes \u00b6 Place the two themes into your themes folder. If you use a wildcard include in your configuration.yaml , then you don't have to do anything anymore: configuration.yaml frontend : themes : !include_dir_merge_named themes/ If you use explicit includes, include the themes manually: !include nm-01-gonsboro.yaml !include nm-03-dark-steelblue.yaml Step 3: Add SAK examples dashboard \u00b6 The Swiss Army Knife examples have their own dashboard. This way using them doesn't interfere with you running installation. You can access the examples from the side panel. Step 3a: Add the external images used by the views to your configuration www/ . \u2514\u2500 images/ \u251c\u2500 backgrounds/ \u2502 \u2514\u2500 balls-background-1.svg # Used by view-sake6.yaml \u2502 \u251c\u2500 weather/ # Used by all weather-type usersvg tools \u2502 \u251c\u2500 *-day.svg \u2502 \u2514\u2500 *-night.svg \u2502 \u251c\u2500 ic-face-1.svg # Used by Airvisual face display usersvg tools \u251c\u2500 (...) \u2514\u2500 ic-face-6.svg Step 3b: Add sak-examples-dashboard.yaml in the root folder and include it into your configuration.yaml : configuration.yaml lovelace : mode : yaml resources : !include lovelace/resources/resources.yaml dashboards : sak-examples : mode : yaml filename : sak-examples-dashboard.yaml title : Swiss Army Knife Examples icon : mdi:hospital-box show_in_sidebar : true The dashboard contains the 11 example views: sak-examples-dashboard.yaml # Decluttering Templates decluttering_templates : !include lovelace/decluttering_templates/decluttering_templates.yaml # Swiss Army Knife Templates sak_templates : !include lovelace/sak_templates/sak_templates.yaml title : Swiss Army Knife Examples views : # Swiss Army Knife example views... - !include lovelace/views/view-sake1.yml - !include lovelace/views/view-sake2.yml - !include lovelace/views/view-sake3.yml - !include lovelace/views/view-sake4.yml - !include lovelace/views/view-sake5.yml - !include lovelace/views/view-sake6.yml - !include lovelace/views/view-sake7.yml - !include lovelace/views/view-sake8.yml - !include lovelace/views/view-sake9.yml - !include lovelace/views/view-sake10.yml - !include lovelace/views/view-sake11.yml The views themselves reference the gonsboro and dark steelblue themes, you can keep your existing theme You don't have to switch to the gonsboro or dark steelblue theme for your installation to see the examples \"as the creator meant them to be seen\", so your existing views stay the same. Step 3c: Restart Home Assistant to have the dashboard installed Make sure to validate your config before you restart Home Assistant You made it again! \u00b6 Now enjoy the examples and don't forget that you have to replace my entities with yours to see the cards as intended!","title":"Installation"},{"location":"start/installation/#automatic-install-using-hacs","text":"By the time this card is released, it will become available in HACS.","title":" Automatic install using HACS"},{"location":"start/installation/#manual-install-for-beta-090-b2-january-2022","text":"This second beta contains some changes in the layout and !includes to make it more up-to-date with current Home Assistant possibilities and requires less manual work. The first beta was still based on an very old config of mine. This version uses the possibilities described in Splitting up the configuration . This beta version expects the files to be using the following directory structure with their files. If your structure differs, put the files into YOUR location, and don't forget to adjust the !include statements.","title":" Manual install (for Beta 0.9.0-b2, January 2022)"},{"location":"start/installation/#my-folder-structure","text":"I use separate folders for many things in Home Assistant Read and adapt to your own config and structure. Below, as reference the folder structure I use Home Assistant Lovelace folder www folder Themes folder homeassistant-data/ . \u251c\u2500 lovelace/ \u251c\u2500 themes/ \u251c\u2500 www/ \u2502 \u251c\u2500 configuration.yaml \u251c\u2500 ui-lovelace.yaml \u2514\u2500 sak-examples-dashboard.yaml My Lovelace folder contains the following folders: lovelace/ . \u251c\u2500 decluttering_templates \u2502 \u251c\u2500 decluttering_templates.yaml \u2502 \u2514\u2500 (etc) \u2502 \u251c\u2500 sak_templates/ \u2502 \u251c\u2500 sak_templates.yaml \u2502 \u251c\u2500 definitions/ \u2502 \u2502 \u251c\u2500 sak-css-definitions.yaml \u2502 \u2502 \u251c\u2500 user-css-definitions.yaml \u2502 \u2502 \u2514\u2500 sak-svg-definitions.yaml \u2502 \u2514\u2500 templates/ \u2502 \u2514\u2500<templates>.yaml \u2502 \u251c\u2500 resources \u2502 \u2514\u2500 resources.yaml \u2502 \u251c\u2500 views/ \u2502 \u251c\u2500 view-sake1.yml \u2502 \u251c\u2500 (...) \u2502 \u2514\u2500 view-sake11.yml The location of the sak_templates folder in the lovelace folder is MANDATORY! This location is hard-coded into the SAK card. SAK needs the templates to function! www/ . \u251c\u2500 community/ \u2502 \u2514\u2500 wip-swiss-army-knife-card/ \u2502 \u2514\u2500 dev-swiss-army-knife-card.js \u2502 \u251c\u2500 images/ \u251c\u2500 backgrounds/ \u2502 \u2514\u2500 balls-background-1.svg # Used by view-sake6.yaml \u2502 \u251c\u2500 weather/ # Used by all weather-type usersvg tools \u2502 \u251c\u2500 *-day.svg \u2502 \u2514\u2500 *-night.svg \u2502 \u251c\u2500 ic-face-1.svg # Used by Airvisual face display usersvg tools \u251c\u2500 (...) \u2514\u2500 ic-face-6.svg themes/ . \u251c\u2500 nm-01-gonsboro.yaml \u2514\u2500 nm-03-dark-steelblue.yaml","title":"My Folder Structure"},{"location":"start/installation/#step-1-add-swiss-army-knife-card-to-your-installation","text":"The folder has a wip prefix and the card itself a dev prefix. These will be removed in the official release. This way they can't overwrite each other... Step 1a: Put the card into the community ( HACS ) folder. www/ . \u251c\u2500 community/ \u2502 \u2514\u2500 wip-swiss-army-knife-card/ \u2502 \u2514\u2500 dev-swiss-army-knife-card.js Step 1b: Add the card to the resources.yaml file. resources.yaml - url : /hacsfiles/wip-swiss-army-knife-card/dev-swiss-army-knife-card.min.js type : module The resources.yaml file should be included in your configuration.yaml config. I assume that that is already in place if you're using custom cards. configuration.yaml lovelace : mode : yaml resources : !include lovelace/resources/resources.yaml I have a YAML only config. Pleas adjust to your own configuration","title":" Step 1: Add Swiss Army Knife Card to your installation"},{"location":"start/installation/#step-2-add-swiss-army-knife-templates","text":"The second step is to add the sak_templates . These are mandatory. Step 2a: Add the SAK templates to the sak_templates folder. Create the sak_templates folder in the lovelace folder and add all the folders and files. lovelace/ . \u251c\u2500 sak_templates/ \u2502 \u251c\u2500 sak_templates.yaml \u2502 \u251c\u2500 definitions/ \u2502 \u2502 \u251c\u2500 sak-css-definitions.yaml \u2502 \u2502 \u2514\u2500 user-css-definitions.yaml \u2502 \u2514\u2500 templates/ \u2502 \u2514\u2500<templates>.yaml``` Step 2b: Include sak_templates to ui-lovelace.yaml ui-lovelace.yaml # Swiss Army Knife Templates sak_templates : !include lovelace/sak_templates/sak_templates.yaml The supplied sak_templates.yaml file contains a wildcard include for the templates folder. So ANY template you add in that folder will be automatically included. You don't have to change this file!","title":" Step 2: Add Swiss Army Knife templates"},{"location":"start/installation/#you-made-it","text":"If this is all you want, you're ready to use the Swiss Army Knife card. If not, continue with the next paragraph for the example dashboard install.","title":" You made it!"},{"location":"start/installation/#examples-dashboard-install","text":"If you want to use the examples, you need the full install that includes the example views, decluttering templates, backgrounds and weather and Airvisual images. And last but not least: the used gonsboro and dark steelblue themes in the examples. Check my folder structure to understand my setup So you can adapt it to yours if different.","title":" Examples dashboard install"},{"location":"start/installation/#step-1-add-decluttering-templates","text":"Step 1a: Install the decluttering card first, if you haven't installed it yet Use HACS to install the decluttering card. Then you should have the following in your ui-lovelace.yaml file: ui-lovelace.yaml # Decluttering Templates decluttering_templates : !include lovelace/decluttering_templates/decluttering_templates.yaml Step 1b: Add the decluttering templates for SAK to your installation. The supplied decluttering_templates.yaml file contains the templates for SAK. If you already use the decluttering card, merge the files.","title":" Step 1: Add decluttering templates"},{"location":"start/installation/#step-2-add-themes","text":"Place the two themes into your themes folder. If you use a wildcard include in your configuration.yaml , then you don't have to do anything anymore: configuration.yaml frontend : themes : !include_dir_merge_named themes/ If you use explicit includes, include the themes manually: !include nm-01-gonsboro.yaml !include nm-03-dark-steelblue.yaml","title":" Step 2: Add themes"},{"location":"start/installation/#step-3-add-sak-examples-dashboard","text":"The Swiss Army Knife examples have their own dashboard. This way using them doesn't interfere with you running installation. You can access the examples from the side panel. Step 3a: Add the external images used by the views to your configuration www/ . \u2514\u2500 images/ \u251c\u2500 backgrounds/ \u2502 \u2514\u2500 balls-background-1.svg # Used by view-sake6.yaml \u2502 \u251c\u2500 weather/ # Used by all weather-type usersvg tools \u2502 \u251c\u2500 *-day.svg \u2502 \u2514\u2500 *-night.svg \u2502 \u251c\u2500 ic-face-1.svg # Used by Airvisual face display usersvg tools \u251c\u2500 (...) \u2514\u2500 ic-face-6.svg Step 3b: Add sak-examples-dashboard.yaml in the root folder and include it into your configuration.yaml : configuration.yaml lovelace : mode : yaml resources : !include lovelace/resources/resources.yaml dashboards : sak-examples : mode : yaml filename : sak-examples-dashboard.yaml title : Swiss Army Knife Examples icon : mdi:hospital-box show_in_sidebar : true The dashboard contains the 11 example views: sak-examples-dashboard.yaml # Decluttering Templates decluttering_templates : !include lovelace/decluttering_templates/decluttering_templates.yaml # Swiss Army Knife Templates sak_templates : !include lovelace/sak_templates/sak_templates.yaml title : Swiss Army Knife Examples views : # Swiss Army Knife example views... - !include lovelace/views/view-sake1.yml - !include lovelace/views/view-sake2.yml - !include lovelace/views/view-sake3.yml - !include lovelace/views/view-sake4.yml - !include lovelace/views/view-sake5.yml - !include lovelace/views/view-sake6.yml - !include lovelace/views/view-sake7.yml - !include lovelace/views/view-sake8.yml - !include lovelace/views/view-sake9.yml - !include lovelace/views/view-sake10.yml - !include lovelace/views/view-sake11.yml The views themselves reference the gonsboro and dark steelblue themes, you can keep your existing theme You don't have to switch to the gonsboro or dark steelblue theme for your installation to see the examples \"as the creator meant them to be seen\", so your existing views stay the same. Step 3c: Restart Home Assistant to have the dashboard installed Make sure to validate your config before you restart Home Assistant","title":" Step 3: Add SAK examples dashboard"},{"location":"start/installation/#you-made-it-again","text":"Now enjoy the examples and don't forget that you have to replace my entities with yours to see the cards as intended!","title":" You made it again!"},{"location":"start/introduction/","text":"Getting started \u00b6 Welcome to the Material 3 Themes for Home Assistant documentation! Material 3 is the latest and greatest version of the Material Design language from Google: Make personal devices feel personal with Material Design 3, Google\u2019s most expressive and adaptable design system yet! M3 or Material YOU and Home Assistant \u00b6 M3 is the overall design language, containing colors, typography and UI elements for websites and Android. The M3 Themes for Home Assistant will only use the colors part and extends and adapts these guidelines to create themes for Home Assistant. So lets start with an overview of the \"Dynamic color\" system that allows M3 to adapt the color scheme to the user preferences, as that is what is used to create the M3 Themes for Home Assistant. If you just want to use these themes, head over to the Installation. You can look at the examples for the existing M3 themes. If you want to know more, and even design your own M3 themes, read more at basics and Design your own.","title":"Introduction"},{"location":"start/introduction/#getting-started","text":"Welcome to the Material 3 Themes for Home Assistant documentation! Material 3 is the latest and greatest version of the Material Design language from Google: Make personal devices feel personal with Material Design 3, Google\u2019s most expressive and adaptable design system yet!","title":"Getting started"},{"location":"start/introduction/#m3-or-material-you-and-home-assistant","text":"M3 is the overall design language, containing colors, typography and UI elements for websites and Android. The M3 Themes for Home Assistant will only use the colors part and extends and adapts these guidelines to create themes for Home Assistant. So lets start with an overview of the \"Dynamic color\" system that allows M3 to adapt the color scheme to the user preferences, as that is what is used to create the M3 Themes for Home Assistant. If you just want to use these themes, head over to the Installation. You can look at the examples for the existing M3 themes. If you want to know more, and even design your own M3 themes, read more at basics and Design your own.","title":" M3 or Material YOU and Home Assistant"}]}